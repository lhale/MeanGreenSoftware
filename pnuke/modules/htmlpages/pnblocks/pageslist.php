<?php
/**
 * PostNuke Application Framework
 *
 * @copyright (c) 2004, PostNuke Development Team
 * @link http://www.postnuke.com
 * @version $Id: pageslist.php 30 2007-11-20 09:04:36Z markwest $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @author Andrea Moro
 * @author Mark West
 * @package PostNuke_3rdParty_Modules
 * @subpackage htmlpages
 */

/**
 * initialise block
 * 
 * @author       Mark West
 * @version      $Revision: 30 $
 */
function htmlpages_pageslistblock_init()
{
    // Security
    pnSecAddSchema('htmlpages:pageslistblock:', 'Block title::');
}

/**
 * get information on block
 * 
 * @author       Mark West
 * @version      $Revision: 30 $
 * @return       array       The block information
 */
function htmlpages_pageslistblock_info()
{
    return array('text_type'      => 'pageslist',
                 'module'         => 'htmlpages',
                 'text_type_long' => 'Show htmlpages items',
                 'allow_multiple' => true,
                 'form_content'   => false,
                 'form_refresh'   => false,
                 'show_preview'   => true);
}

/**
 * display block
 * 
 * @author       Mark West
 * @version      $Revision: 30 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the rendered bock
 */
function htmlpages_pageslistblock_display($blockinfo)
{
    // Security check
    if (!pnSecAuthAction(0, 'htmlpages:pageslistblock:', "$blockinfo[title]::", ACCESS_READ)) {
        return false;
    }

    // Get variables from content block
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 5;
    }

	// Check if the htmlpages module is available. 
	if (!pnModAvailable('htmlpages')) {
		return false;
	}

    // Call the modules API to get the items
    $items = pnModAPIFunc('htmlpages', 'user', 'getall');	

	// Check for no items returned
	if (empty($items)) {
	    return;
	}

    // Call the modules API to get the numitems
    $countitems = pnModAPIFunc('htmlpages', 'user', 'countitems');	
						  
    // Compare the numitems with the block setting
    if ($countitems <= $vars['numitems']) {
	    $vars['numitems'] = $countitems;
    }    
		
    // Create output object
	$pnRender = new pnRender('htmlpages');
	
    // Display each item, permissions permitting
	$shown_results = 0;
	$htmlpagesitems = array();
	foreach ($items as $item) {
        if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$pid", ACCESS_OVERVIEW)) {
			$shown_results++;
			if ($shown_results <= $vars['numitems']) {
	            if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$pid", ACCESS_READ)) {
		        	$htmlpagesitems[] = array('url'   => pnModURL('htmlpages', 'user', 'display', array('pid' => $item['pid'])),
				    	                    'title' => $item['title']);
            	} else {
			    	$htmlpagesitems[] = array('title' => $item['title']);
            	}
			}
        }
    }
    $pnRender->assign('items', $htmlpagesitems);
	
    // Populate block info and pass to theme
    $blockinfo['content'] = $pnRender->fetch('htmlpages_block_pageslist.htm');

    return themesideblock($blockinfo);
}

/**
 * modify block settings
 * 
 * @author       Mark West
 * @version      $Revision: 30 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the bock form
 */
function htmlpages_pageslistblock_modify($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 5;
    }

    // Create output object
	$pnRender = new pnRender('htmlpages');

	// As Admin output changes often, we do not want caching.
	$pnRender->caching = false;

    // assign the approriate values
	$pnRender->assign('numitems', $vars['numitems']);

    // Return the output that has been generated by this function
	return $pnRender->fetch('htmlpages_block_pageslist_modify.htm');
}

/**
 * update block settings
 * 
 * @author       Mark West
 * @version      $Revision: 30 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       $blockinfo  the modified blockinfo structure
 */
function htmlpages_pageslistblock_update($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);
	
	// alter the corresponding variable
    $vars['numitems'] = pnVarCleanFromInput('numitems');
	
	// write back the new contents
    $blockinfo['content'] = pnBlockVarsToContent($vars);

	// clear the block cache
	$pnRender = new pnRender('htmlpages');
	$pnRender->clear_cache('htmlpages_block_pageslist.htm');
	
    return $blockinfo;
}
