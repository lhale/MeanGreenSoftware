<?php
/**
 * PostNuke Application Framework
 *
 * @copyright (c) 2004, PostNuke Development Team
 * @link http://www.postnuke.com
 * @version $Id: view.php 30 2007-11-20 09:04:36Z markwest $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @author Andrea Moro
 * @author Mark West
 * @package PostNuke_3rdParty_Modules
 * @subpackage htmlpages
 */

/**
 * view items
 */
function htmlpages_admin_view()
{
    //  first page to view
    list($startnum, $orderby, $order, $type, $letter) = pnVarCleanFromInput('startnum', 'orderby', 'order', 'type', 'letter');

    if (!pnSecAuthAction(0, 'htmlpages::', '::', ACCESS_OVERVIEW)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // we need this value multiple times, so we keep it
    $itemsperpage = pnModGetVar('htmlpages', 'itemsperpage');

    // The user API function is called.  
    $items = pnModAPIFunc('htmlpages', 'user', 'getall',
                          array('startnum' => $startnum,
                                'orderby'  => $orderby,
                                'order'    => $order,
                                'numitems' => $itemsperpage,
                                'letter'   => $letter));

	// create new output object
	$pnRender = new pnRender('htmlpages');

    // As Admin output changes often, we do not want caching.
    $pnRender->caching = false;

    // assign the function type
	$pnRender->assign('type', $type);

	// decide the correct sort field
    $sortedby=_HTMLPAGESTITLE;
    if ($orderby=='pid') {
        $sortedby=_HTMLPAGESPID;
    } elseif ($orderby=='title') {
        $sortedby=_HTMLPAGESTITLE;
    } elseif ($orderby=='timest') {
        $sortedby=_HTMLPAGESTIME;
    } elseif ($orderby=='printlink') {
        $sortedby=_HTMLPRINTLINK;
    } elseif ($orderby=='uid') {
        $sortedby=_HTMLPAGESUID;  
    }
	$pnRender->assign('sortedby', $sortedby);

	// decide the correct sort order
    if ($order=='ASC' or !isset($order)) {
        $order='DESC';
    } else {
        $order='ASC';
    }
	$pnRender->assign('order', $order);

	$pages = array();
    foreach ($items as $item) {
        if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$item[pid]", ACCESS_OVERVIEW)) {

            // Options for the item.  
            $options = array();
            if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$item[pid]", ACCESS_READ)) {
				$options[] = array('url' => pnModURL('htmlpages', 'user', 'display', array('pid' => $item['pid'])),
								 'title' => _READ);
				$options[] = array('url' => pnModURL('htmlpages', 'user', 'display', array('pid' => $item['pid'], 'theme' => 'Printer')),
								 'title' => _READFR);
                if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$item[pid]", ACCESS_EDIT)) {                    
                    $options[] = array('url' => pnModURL('htmlpages', 'admin', 'modify', array('pid' => $item['pid'])),
                                       'title' => _EDIT);
                    if (pnSecAuthAction(0, 'htmlpages::', "$item[title]::$item[pid]", ACCESS_DELETE)) {
                        $options[] = array('url' => pnModURL('htmlpages', 'admin', 'delete', array('pid' => $item['pid'])),
                                           'title' => _DELETE);
                    }
                }
            } else {
                $options[] = _NOVIEWALLOWED;
            }
			$item['options'] = $options;
			$pages[] = $item;
        }
    }
    $pnRender->assign('pages', $pages);

    // assign the values for the smarty plugin to produce a pager in case of there
    // being many items to display.
    $pnRender->assign('pager', array('numitems'     => pnModAPIFunc('htmlpages', 
                                                                    'user', 
                                                                    'countitems', 
                                                                    array('letter' => $letter)),
                                     'itemsperpage' => $itemsperpage));

    // Return the output that has been generated by this function
    return $pnRender->fetch('htmlpages_admin_view.htm');
}
